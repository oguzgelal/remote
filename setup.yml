- hosts: localhost
  connection: local
  remote_user: root
  become: yes
  become_method: sudo
  gather_facts: yes
  
  vars:
    ansible_connection: local
    ansible_python_interpreter: /usr/bin/python3
    host_key_checking: False
    sudo_user: root
    roles_path: root
    apps_path: /var/apps
    cwd: '{{ cwd }}'
  
  tasks:

  - name: Clean artifact path
    file:
      state: absent
      path: '{{ apps_path }}'

  - name: Create apps directory
    file:
      path: '{{ apps_path }}'
      state: directory
      mode: 493

  - name: Copy Docker apps
    copy:
      src: '{{ cwd }}/apps/'
      dest: '{{ apps_path }}/'
      remote_src: no

  - name: Add Dockers official GPG key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  
  - name: Install docker packages
    apt:
      name: [
        'software-properties-common',
        'apt-transport-https',
        'ca-certificates',
        'gnupg-agent',
        'curl',
      ]
      state: present
      update_cache: yes

  - name: Set up the stable repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
      state: present
      update_cache: yes

  - name: Update apt packages
    apt:
      update_cache: yes

  - name: Install docker
    apt:
      name: docker-ce
      state: present
      update_cache: yes

  - name: Add remote 'ubuntu' user to 'docker' group
    user:
      name: '{{ sudo_user }}'
      group: 'docker'
      append: yes

  - name: Install docker-compose
    get_url: 
      url : https://github.com/docker/compose/releases/download/1.25.1-rc1/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: 'u+x,g+x'

  - name: Stop previous Docker-compose
    shell:
      cmd: 'docker-compose down'
    args:
      executable: /bin/bash
      chdir: '{{ apps_path }}/'

  - name: Run Docker-compose
    shell:
      cmd: 'docker-compose up --build -d'
    args:
      executable: /bin/bash
      chdir: '{{ apps_path }}/'

  - name: Add docker volume for portainer
    shell:
      cmd: 'docker volume create portainer_data'
    args:
      executable: /bin/bash
      chdir: '{{ apps_path }}/'

  - name: Add portainer
    run_once: true
    shell:
      cmd: 'docker run -d -p 9000:9000 -p 8000:8000 --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer'
    args:
      executable: /bin/bash
      chdir: '{{ apps_path }}/'

      
